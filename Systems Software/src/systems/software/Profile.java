/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package systems.software;

import java.io.FileInputStream;
import java.io.ObjectInputStream;
import java.net.Socket;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Sam King
 */
public class Profile extends javax.swing.JFrame {
    SocketCommunicator talker = new SocketCommunicator();
    public String clientName = null;
        /**
     * Creates new form Profile
     */
    public Profile() {
        initComponents();
        //updateGUI();
    }

     public Profile(String userName) 
     {
        initComponents();
        setTitle("Current Account: " + userName);
        clientName = userName;
        /*
        Runnable r = new Runnable() {
         public void run() {
             while(true)
             {
                updateGUI();
                try{
                    Thread.sleep(2000);
                }catch(Exception E){
                System.out.println("Thread Error:" + E.getMessage());
                }
             }
         }
        };

     new Thread(r).start();
     */
    }
     
     void updateGUI(){
        //MemberList
        memberList.removeAll();
        ArrayList <Member> AllMembers = talker.onlinePepes();
            for(Member m:AllMembers){      
                if(!m.userName.equals(clientName))
                {
                    memberList.add(m.userName);//update online list
                }
            }
                        
        //Request List
        requestList.removeAll();
        Member M = talker.getUser(clientName);
        ArrayList <String> Requests = M.friendsRequests;
            for(String User:Requests){
                requestList.add(User);
            }
        
        //SelectedFriend List
        
        ArrayList <String> friends = M.friends;
            for(String User:friends){
                FriendsList.add(User);
            }
        
        
        if(FriendsList.getSelectedIndex() != -1)
        {
            //infoList
            infoList.removeAll();
            Member Friend = talker.getUser(FriendsList.getSelectedItem());
            infoList.add(Friend.dateOfBirth);
            infoList.add(Friend.placeOfBirth);
            
            //songList
            songList.removeAll();
            ArrayList <String> friendSongs = Friend.Songs;
            for(String song:friendSongs){
                songList.add(song);
            }
        }
        
     }  
     
     
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Music = new javax.swing.JButton();
        Profile = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        Play = new javax.swing.JButton();
        sendRequesst = new javax.swing.JButton();
        Accept = new javax.swing.JButton();
        Decline = new javax.swing.JButton();
        logOut = new javax.swing.JButton();
        Chat = new javax.swing.JButton();
        memberList = new java.awt.List();
        songList = new java.awt.List();
        requestList = new java.awt.List();
        infoList = new java.awt.List();
        FriendsList = new java.awt.List();
        Refresh = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Music.setFont(new java.awt.Font("Georgia Pro Black", 0, 24)); // NOI18N
        Music.setText("Music");
        Music.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MusicActionPerformed(evt);
            }
        });

        Profile.setFont(new java.awt.Font("Georgia Pro Black", 0, 24)); // NOI18N
        Profile.setText("Profile");
        Profile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProfileActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Georgia Pro Black", 0, 14)); // NOI18N
        jLabel1.setText("Your Friends");

        jLabel2.setFont(new java.awt.Font("Georgia Pro Black", 0, 14)); // NOI18N
        jLabel2.setText("Spotyfi Members");

        jLabel3.setFont(new java.awt.Font("Georgia Pro Black", 0, 14)); // NOI18N
        jLabel3.setText("Friend Requests");

        jLabel4.setFont(new java.awt.Font("Georgia Pro Black", 0, 14)); // NOI18N
        jLabel4.setText("Information");

        jLabel5.setFont(new java.awt.Font("Georgia Pro Black", 0, 14)); // NOI18N
        jLabel5.setText("Shared Songs");

        Play.setFont(new java.awt.Font("Georgia Pro Black", 0, 14)); // NOI18N
        Play.setText("Play");

        sendRequesst.setFont(new java.awt.Font("Georgia Pro Black", 0, 14)); // NOI18N
        sendRequesst.setText("Send Request");
        sendRequesst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendRequesstActionPerformed(evt);
            }
        });

        Accept.setFont(new java.awt.Font("Georgia Pro Black", 0, 14)); // NOI18N
        Accept.setText("Accept ");
        Accept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AcceptActionPerformed(evt);
            }
        });

        Decline.setFont(new java.awt.Font("Georgia Pro Black", 0, 14)); // NOI18N
        Decline.setText("Decline");
        Decline.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeclineActionPerformed(evt);
            }
        });

        logOut.setFont(new java.awt.Font("Georgia Pro Black", 0, 18)); // NOI18N
        logOut.setText("Log Off");
        logOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logOutActionPerformed(evt);
            }
        });

        Chat.setFont(new java.awt.Font("Georgia Pro Black", 0, 18)); // NOI18N
        Chat.setText("Chat");
        Chat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChatActionPerformed(evt);
            }
        });

        songList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                songListActionPerformed(evt);
            }
        });

        Refresh.setText("Refresh");
        Refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Music, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(Profile, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(FriendsList, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(40, 40, 40)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(infoList, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(jLabel4)
                                                .addGap(18, 18, 18)))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(67, 67, 67)
                                                        .addComponent(jLabel5)
                                                        .addGap(69, 69, 69))
                                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                        .addComponent(songList, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(37, 37, 37)))
                                                .addComponent(Chat, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addGap(41, 41, 41)
                                                .addComponent(Play)
                                                .addGap(204, 204, 204))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(23, 23, 23)
                                        .addComponent(sendRequesst)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel3)
                                            .addComponent(requestList, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(Accept)
                                            .addComponent(Decline))))
                                .addGap(0, 171, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(memberList, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(43, 43, 43)
                                        .addComponent(jLabel2)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Refresh, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(logOut, javax.swing.GroupLayout.Alignment.TRAILING))))))
                .addGap(0, 11, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(logOut)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(requestList, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Accept)
                                .addGap(28, 28, 28)
                                .addComponent(Decline)
                                .addGap(56, 56, 56)
                                .addComponent(Refresh))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(memberList, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addComponent(sendRequesst, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(songList, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Play)
                        .addGap(13, 13, 13))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(Chat)
                                    .addGap(99, 99, 99))
                                .addComponent(infoList, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(FriendsList, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Music)
                    .addComponent(Profile))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sendRequesstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendRequesstActionPerformed
        // TODO add your handling code here:
        //Get selected Member's Profile
        Member M = talker.getUser(memberList.getSelectedItem());
        
        if(M != null){
            M.friendsRequests.add(clientName);
            //Commits changes to the database
            talker.UpdateDatabase(M);
        }
        else{
           //Error Message!!
        JOptionPane.showMessageDialog(new JPanel(), "Error", "User not selected", JOptionPane.ERROR_MESSAGE);
         
        }
        
        
    }//GEN-LAST:event_sendRequesstActionPerformed

    private void MusicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MusicActionPerformed
        // TODO add your handling code here:
        this.dispose();
        new Music().setVisible(true);
    }//GEN-LAST:event_MusicActionPerformed

    private void logOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logOutActionPerformed

        Member M = talker.getUser(clientName);
        talker.signOut(M);
        this.dispose();
        new UI().setVisible(true);
    }//GEN-LAST:event_logOutActionPerformed

    private void ChatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChatActionPerformed
        // TODO add your handling code here:
        if(FriendsList.getSelectedIndex() != -1)
        {
            Chat newChat = new Chat(clientName, FriendsList.getSelectedItem());
            newChat.setVisible(true); 
        }
        else
        {
            //Error Message!!
            JOptionPane.showMessageDialog(new JPanel(), "Error", "User not selected", JOptionPane.ERROR_MESSAGE);
        }
        
        
    }//GEN-LAST:event_ChatActionPerformed

    private void songListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_songListActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_songListActionPerformed

    private void AcceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AcceptActionPerformed
        // TODO add your handling code here:
        //Selected User
        String SelectedUser = requestList.getSelectedItem();   
        //Getting both profiles
        Member M = talker.getUser(clientName);
        Member OtherUser = talker.getUser(SelectedUser);
        
        if(SelectedUser != null){
            //Add user to friends list for client
            M.friends.add(SelectedUser); 
            
            //For other user            
            OtherUser.friends.add(clientName);
        
            //Remove User from friendsRequest list
            M.friendsRequests.remove(SelectedUser);
            
            //Commits changes to the database
            talker.UpdateDatabase(M);
            talker.UpdateDatabase(OtherUser);
        }
        else{
           //Error Message!!
        JOptionPane.showMessageDialog(new JPanel(), "Error", "User not selected", JOptionPane.ERROR_MESSAGE);
         
        }
        
    }//GEN-LAST:event_AcceptActionPerformed

    private void DeclineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeclineActionPerformed
        // TODO add your handling code here:
        Member M = talker.getUser(clientName);
        
        if(FriendsList.getSelectedIndex() != -1){
            //Remove User from friendRequest list
            M.friendsRequests.remove(requestList.getSelectedItem());
            //Commits changes to the database
            talker.UpdateDatabase(M);
        }
        else{
           //Error Message!!
        JOptionPane.showMessageDialog(new JPanel(), "Error", "User not selected", JOptionPane.ERROR_MESSAGE);
         
        }
        
    }//GEN-LAST:event_DeclineActionPerformed

    private void RefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshActionPerformed
        // TODO add your handling code here:
        updateGUI();
    }//GEN-LAST:event_RefreshActionPerformed

    private void ProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProfileActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ProfileActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Profile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Profile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Profile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Profile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Profile().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Accept;
    private javax.swing.JButton Chat;
    private javax.swing.JButton Decline;
    private java.awt.List FriendsList;
    private javax.swing.JButton Music;
    private javax.swing.JButton Play;
    private javax.swing.JButton Profile;
    private javax.swing.JButton Refresh;
    private java.awt.List infoList;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JButton logOut;
    private java.awt.List memberList;
    private java.awt.List requestList;
    private javax.swing.JButton sendRequesst;
    private java.awt.List songList;
    // End of variables declaration//GEN-END:variables
}
